type User {
  id: ID!
  username: String!
  password: String!
  role: Int!
  point: Int!
}

scalar Time

type AuthTokens {
  accessToken: String!
  refreshToken: String!
  expiredAt: Time!
  userId: ID!
}

type AuthResponse {
  authTokens: AuthTokens!
  user: User!
}

input SignUpUser {
  username: String!
  password: String!
}

input SignInUser {
  username: String!
  password: String!
}

type Query {
  user(id: ID!): User!
}

type Message {
  message: String!
}
input Refresh{
  refreshToken: String!
}

type Auth {
  id: ID!
  refToken: String!
  userId: ID!
}

type Project {
  id: Int!
  name: String!
  shortDescription: String!
  description: String!
  private: Boolean!
  closed: Boolean!
  orgId: Int!
  created: Time!
  updated: Time!
}

input UpdateProject {
  name: String
  shortDescription: String
  description: String
}


input CreateProject {
  name: String!
  shortDescription: String!
  description: String!
}

type Vulnerability {
  id: Int!
  name: String!
  description: String!
  created: Time!
  updated: Time!
}

input CreateVulnerability{
  name: String!
  description: String!
}

input UpdateVulnerability{
  name: String
  description: String
}

type Report {
  Id:              Int!
  Name:            String!
  Description:     String!
  Status:          String!
  Seriousness:     String!
  Archive:         Boolean!
  Delete:          Boolean!
  Reward:          Int!
  Point:           Int!
  ProjectId:       Int!
  VulnerabilityId: Int!
  UserId:          Int!
  Assignee:        Int!
  UnreadComments:  Boolean!
  Comments:        String!
  SentReportDate:  Time!
  LastCommentTime: Time!
  Created:         Time!
  Updated:         Time!
}

input CreateReport {
  Name:            String!
  Description:     String!
  Comments:        String!
  Seriousness:     String!
}

input UpdateReport {
  Name:            String
  Description:     String
  Comments:        String
  Seriousness:     String
}

type levelAchievements {
  id: ID!
  userId: Int!
  levelAchievementsId: Int!
  created: Time!
}

input ReportStatus{
  Status: String!
}

type Mutation {
  signIn(input: SignInUser!): AuthResponse!
  signUp(input: SignUpUser!): Message!
  refreshTokens(input: Refresh!): AuthResponse!
  logout(input: Refresh!): Message!
  showTheProjectByID(id: Int!): Project!
  createProject(input: CreateProject!): Project!
  updateProject(id:Int!, input: UpdateProject!): Message!
  deleteProject(id:Int!):Message!
  showTheVulnerabilityByID(id: Int!): Vulnerability!
  createVulnerability(input: CreateVulnerability!): Vulnerability!
  updateVulnerability(id:Int!, input: UpdateVulnerability!): Message!
  deleteVulnerability(id:Int!):Message!
  showTheReportByID(id: Int!): Report!
  createReport(input: CreateReport!): Report!
  updateReport(id:Int!, input: UpdateReport!): Message!
  deleteReport(id:Int!):Message!
  showAllReportByStatus(input:ReportStatus!):[Report]!
  verifyReport(id:Int!, input: ReportStatus!):Report!
}